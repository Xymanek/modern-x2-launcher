<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:vmCommon="clr-namespace:ModernX2Launcher.ViewModels.Common"
             xmlns:vmFiltering="clr-namespace:ModernX2Launcher.ViewModels.MainWindow.ModList.Filtering"
             xmlns:dVm="using:ModernX2Launcher.Design.ViewModels"
             xmlns:controls="clr-namespace:ModernX2Launcher.Views.Controls"
             xmlns:mi="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
             d:DataContext="{x:Static dVm:DesignData.ModList}"
             x:Class="ModernX2Launcher.Views.MainWindow.ModList.ModListView">
    <DockPanel LastChildFill="True">

        <!-- Filtering options -->
        <DockPanel DockPanel.Dock="Top" LastChildFill="True">
            <DockPanel.Styles>
                <Style Selector="controls|IconStatBlock /template/ mi|MaterialIcon">
                    <Setter Property="Height" Value="20" />
                    <Setter Property="Width" Value="20" />
                </Style>

                <!--
                    This is weird, but I can't find a way to detect which WrapPanel children are the first/last per row,
                    so each filter gets right/down margin which should account for spacing between items themselves
                    and between the items and grid without any excessive spacing anywhere 
                -->
                <Style Selector="#FilterItems > :is(Control)">
                    <Setter Property="Margin" Value="0 0 5 5" />
                </Style>

                <Style Selector="#FilterItems /template/ Border">
                    <Setter Property="Margin" Value="0" />
                </Style>

                <Style Selector="Border.flexibleFilterItem">
                    <Setter Property="BorderBrush" Value="{DynamicResource ThemeBorderLowBrush}" />
                    <Setter Property="BorderThickness" Value="{DynamicResource ThemeBorderThickness}" />

                    <Setter Property="Background" Value="{DynamicResource ThemeControlMidBrush}" />
                </Style>

                <Style Selector="Border.flexibleFilterItem > StackPanel > Button">
                    <Setter Property="VerticalAlignment" Value="Stretch" />
                    <Setter Property="BorderBrush" Value="{x:Null}" />
                    <Setter Property="Background" Value="{x:Null}" />
                </Style>

                <Style
                    Selector="Border.flexibleFilterItem > StackPanel > Button:pointerover /template/ ContentPresenter#PART_ContentPresenter">
                    <Setter Property="BorderBrush" Value="{x:Null}" />
                    <Setter Property="Background" Value="{DynamicResource ThemeControlHighlightMidBrush}" />
                </Style>

                <Style
                    Selector="Border.flexibleFilterItem > StackPanel > Button:pressed /template/ ContentPresenter#PART_ContentPresenter">
                    <Setter Property="BorderBrush" Value="{x:Null}" />
                    <Setter Property="Background" Value="{DynamicResource ThemeControlHighlightHighBrush}" />
                </Style>
            </DockPanel.Styles>

            <!--
                The margin is to keep in center with visual filters' positions.
                Should probably use absolute vertical offset to better handle multiple lines of filters  
            -->
            <controls:IconStatBlock DockPanel.Dock="Right" Margin="0 0 0 5"
                                    Icon="FilterVariant"
                                    Content="{Binding PostFilterCount}"
                                    ToolTip.Tip="Number of displayed mods (after filtering)" />

            <ItemsControl Name="FilterItems">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel></WrapPanel>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

                <ItemsControl.Resources>
                    <TextBox x:Key="NameFilterTextBox"
                             MinWidth="150" MaxWidth="200"
                             Text="{Binding NameFilterValue}"
                             Watermark="Search by name"
                             Classes="clearButton" />

                    <Button x:Key="AddFilterButton"
                            Command="{Binding AddFilter}"
                            ToolTip.Tip="Click to add a new filter">
                        <mi:MaterialIcon Kind="FilterPlus" />
                    </Button>
                </ItemsControl.Resources>

                <ItemsControl.DataTemplates>
                    <DataTemplate DataType="{x:Type vmFiltering:IModListFilter}">

                        <Border Classes="flexibleFilterItem">
                            <StackPanel Orientation="Horizontal">

                                <Button Padding="3 0"
                                        ToolTip.Tip="Click to edit">
                                    <TextBlock Text="{Binding DisplayLabel}" />
                                </Button>

                                <Button Padding="0">
                                    <Panel>
                                        <mi:MaterialIcon Kind="Close" />
                                        <Rectangle Fill="Transparent" />
                                    </Panel>
                                </Button>
                            </StackPanel>
                        </Border>

                    </DataTemplate>
                </ItemsControl.DataTemplates>
            </ItemsControl>

        </DockPanel>

        <!-- The main data grid -->
        <DataGrid Items="{Binding ModsGridCollectionView}" AutoGenerateColumns="False"
                  IsReadOnly="True" CanUserReorderColumns="True"
                  CanUserResizeColumns="True" CanUserSortColumns="True"
                  RowBackground="#00FFFFFF"
                  LoadingRow="DataGrid_OnLoadingRow"
                  SelectionChanged="DataGrid_OnSelectionChanged">
            <DataGrid.Styles>

                <!--
                    Note: the context menu doesn't work on the empty space between the last column and the
                    right edge of the datagrid. That space is technically a column header, but it's IsEnabled = false
                    (which I assume prevents the right click handlers from firing)  
                -->
                <Style Selector="DataGridColumnHeader">
                    <Setter Property="ContextMenu">
                        <ContextMenu>
                            <MenuItem Header="Author" Command="{Binding ColumnVisibilityAuthor.Toggle}" />
                            <MenuItem Header="2" />
                        </ContextMenu>
                    </Setter>
                </Style>

                <Style Selector="DataGridRowGroupHeader">
                    <Setter Property="IsItemCountVisible" Value="True"></Setter>
                </Style>

                <!-- The default BG is transparent and we don't want the row background to "leak" into the checkbox -->
                <Style Selector="CheckBox">
                    <Setter Property="Background" Value="#FFFFFF" />
                </Style>

                <Style Selector="DataGridRow /template/ Rectangle#BackgroundRectangle">
                    <Setter Property="Fill" Value="{DynamicResource ThemeAccentBrush4}" />
                </Style>

                <Style Selector="DataGridRow:selected /template/ Rectangle#BackgroundRectangle">
                    <Setter Property="Fill" Value="{DynamicResource ThemeAccentBrush1}" />
                </Style>

                <Style Selector="DataGridRow:selected">
                    <Setter Property="Foreground" Value="#000000" />
                </Style>
            </DataGrid.Styles>

            <DataGrid.Columns>
                <!-- A grouping spacer "column" gets added by Avalonia.Controls.DataGridColumnCollection.EnsureRowGrouping -->
                <!-- It's all private/internal - will likely need a patch to avalonia itself to disable it -->

                <!-- TODO: Can still drag other columns before this one -->
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="vmCommon:ModEntryViewModel">
                            <CheckBox Margin="2 0"
                                      IsChecked="{Binding IsEnabled, Mode=OneWay}" Click="OnToggleModEnabled" />
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>

                <DataGridTextColumn Header="Title" Binding="{Binding Title}" />
                <DataGridTextColumn Header="Category" Binding="{Binding Category}" />
                <DataGridTextColumn Header="Author" Binding="{Binding Author}"
                                    IsVisible="{Binding ColumnVisibilityAuthor.IsVisible}" />
            </DataGrid.Columns>
        </DataGrid>
    </DockPanel>
</UserControl>