<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:ModernX2Launcher.ViewModels"
        xmlns:controls="clr-namespace:ModernX2Launcher.Views.Controls"
        xmlns:mi="clr-namespace:Material.Icons.Avalonia;assembly=Material.Icons.Avalonia"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
        x:Class="ModernX2Launcher.Views.MainWindow"
        Icon="/Assets/avalonia-logo.ico"
        Width="800" Height="450"
        Title="ModernX2Launcher">

    <Design.DataContext>
        <vm:MainWindowViewModel />
    </Design.DataContext>

    <DockPanel LastChildFill="True">

        <DockPanel DockPanel.Dock="Top">
            <DockPanel.Styles>
                <!--
                    Note the child selector (not descendant) is on purpose - don't touch
                    the MenuItems in the dropdown
                -->
                <Style Selector="Menu > MenuItem /template/ ContentPresenter">
                    <Setter Property="VerticalContentAlignment" Value="Center" />
                </Style>

                <Style Selector="controls|IconStatBlock">
                    <Setter Property="Margin" Value="0 0 10 0" />
                </Style>

                <Style Selector="controls|IconStatBlock /template/ mi|MaterialIcon">
                    <Setter Property="Height" Value="20" />
                    <Setter Property="Width" Value="20" />
                </Style>
            </DockPanel.Styles>

            <Menu DockPanel.Dock="Left">
                <MenuItem Header="_File">
                    <MenuItem Header="_Open..." />
                    <Separator />
                    <MenuItem Header="_Exit" />
                </MenuItem>
                <MenuItem Header="_Edit">
                    <MenuItem Header="Copy" />
                    <MenuItem Header="Paste" />
                </MenuItem>
            </Menu>

            <Panel DockPanel.Dock="Right" HorizontalAlignment="Right">
                <StackPanel Orientation="Horizontal" Margin="3">

                    <!-- TODO: the hit test rectangle broke -->
                    
                    <controls:IconStatBlock Icon="Warning" IconForeground="Orange"
                                            Content="1"
                                            IsVisible="True"
                                            ToolTip.Tip="Number of enabled mods with warnings" />
                    
                    <controls:IconStatBlock Icon="Error" IconForeground="Red"
                                            Content="1"
                                            IsVisible="True"
                                            ToolTip.Tip="Number of enabled mods with errors" />
                    
                    <controls:IconStatBlock Icon="CheckBox"
                                            Content="{Binding ModListMode.ModList.EnabledCount}"
                                            ToolTip.Tip="Number of enabled mods" />

                    <controls:IconStatBlock Icon="FormatListBulletedSquare"
                                            Content="{Binding ModListMode.ModList.Mods.CountChanged^}"
                                            ToolTip.Tip="Total number of mods (that MXL is aware of)" />

                    <ComboBox SelectedIndex="0"
                              Margin="0 0 5 0"
                              ToolTip.Tip="Active profile">
                        <ComboBoxItem>Default</ComboBoxItem>
                        <ComboBoxItem>Inline Item 2</ComboBoxItem>
                        <ComboBoxItem>Inline Item 3</ComboBoxItem>
                        <ComboBoxItem>Inline Item 4</ComboBoxItem>
                    </ComboBox>

                    <!-- ComboBox-like styled Button. TODO: Make ComboBoxFlyout -->
                    <Button Margin="0 0 5 0"
                            Background="Transparent" BorderBrush="{DynamicResource ThemeBorderMidBrush}">

                        <!--<Button.Styles>
                            <Style Selector=":pointerover">
                                <Setter Property="BorderBrush" Value="{DynamicResource ThemeBorderHighBrush}" />
                            </Style>
                        </Button.Styles>-->

                        <Button.Content>
                            <StackPanel Orientation="Horizontal">
                                <TextBlock Text="Launch arguments" Margin="0 0 4 0" />
                                <Path Width="8"
                                      Height="4"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Data="F1 M 301.14,-189.041L 311.57,-189.041L 306.355,-182.942L 301.14,-189.041 Z"
                                      Fill="{DynamicResource ThemeForegroundBrush}"
                                      Stretch="Uniform" />
                            </StackPanel>
                        </Button.Content>

                        <Button.Flyout>
                            <Flyout Placement="BottomEdgeAlignedRight">
                                <StackPanel>
                                    <StackPanel Orientation="Horizontal">
                                        <CheckBox Margin="0 0 5 0" IsChecked="True" />
                                        <TextBlock Text="-log" />
                                    </StackPanel>

                                    <StackPanel Orientation="Horizontal" Margin="0 5 0 0">
                                        <CheckBox Margin="0 0 5 0" />
                                        <TextBlock Text="-autodebug" />
                                    </StackPanel>
                                </StackPanel>
                            </Flyout>
                        </Button.Flyout>
                    </Button>

                    <Button>
                        Launch
                    </Button>

                </StackPanel>
            </Panel>
        </DockPanel>

        <!-- An extremely basic separator, should probably come up with something nicer -->
        <Rectangle DockPanel.Dock="Top"
                   Fill="Black" Height="1" Opacity="0.1" />
        
        <SplitView IsPaneOpen="False" DisplayMode="CompactInline"
                   OpenPaneLength="296">
            <SplitView.Pane>
                <StackPanel>
                    <controls:MainWindowModeButton ModeName="Mods" Icon="FormatListChecks" />
                    <controls:MainWindowModeButton ModeName="Overrides" Icon="AlertRhombusOutline" />
                    <controls:MainWindowModeButton ModeName="Mod updates" Icon="Update" />
                    <controls:MainWindowModeButton ModeName="Profile management" Icon="TextBoxMultipleOutline" />
                </StackPanel>
            </SplitView.Pane>

            <ContentControl Content="{Binding ModListMode}" />
        </SplitView>

    </DockPanel>
</Window>